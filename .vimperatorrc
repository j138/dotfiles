" j138 .vimperatorrc

" Options
set history=1000
set activate=homepage,quickmark,tabopen,paste

" tabopen時の補完対象
set complete=tsl

" gui options
set guioptions=mBrb

" 検索時に大文字小文字を区別しない
set ignorecase

" ex mode でインクリメント補完
set wildoptions=auto

" 検索時にハイライト
set hlsearch

" set chars for hint mode
set hintchars=asdfghjklqwertuiovbn

set visualbell

" ロード時にテキストボックスにフォーカスしない
set focuscontent

" ウィンドウサイズを変更するページは新しいウィンドウで開く
" set popups=window

" タブ非表示
set showtabline=2

" leaderを変更
let mapleader = ","

colorscheme bigchu2

" ステータスバーの背景色を変更
hi StatusLine color:black; background:#ABD31B; font-weight:normal;

" Mappings
noremap j 5<C-e>
noremap k 5<C-y>
noremap J <PageDown>
noremap K <PageUp>

" タブの移動
nnoremap h gT
nnoremap l gt
nnoremap <C-H> h
nnoremap <C-L> l

noremap U :undo<Space>

" ! でページのCSSをon/off
noremap ! :set invum<CR>

" ページのエンコーディングを変更
noremap ,es :set encoding=Shift_JIS<CR>
noremap ,ec :set encoding=EUC-JP<CR>
noremap ,eu :set encoding=UTF-8<CR>
noremap ,ei :set encodeing=ISO-2022-JP<CR>

" .vimperatorrcを再読み込み
noremap <Leader>so :source ~/.vimperatorrc<CR>

" タブ位置の移動
map <C-h> :tabmove! -1<CR>
map <C-l> :tabmove! +1<CR>

" ブックマークの追加をトグル
noremap a          <S-a>

" タブをCtrl-Nに
cmap <C-n> <Tab>
cmap <C-p> <S-Tab>

" nextlink.js
let g:nextlink_followlink = "true"

" ]]/[[ にヒットする文字列追加
set nextpattern+=次(の)?ページ,→\b,下一頁,Следующая,다음
set previouspattern+=prev,前(の)?ページ,\b前.*,\b←

" appendAnchor.js
let g:auto_append_anchor = "true"
let g:auto_append_anchor_once = "true"

"copy.js {{{
map <leader>y :copy<Space>TitleAndbittly<CR>
map <leader>Y :copy<Space>titleAndURL<CR>

javascript <<EOM
    liberator.globalVariables.copy_templates = [
    { label: 'titleAndURL',     value: '%TITLE% %URL%' },
    { label: 'title<cr>URL',   value: '%TITLE%\n%URL%' },
    { label: '[[title:URL]]',   value: '[[%TITLE%:%URL%]]' },
    { label: 'title',           value: '%TITLE%' },
    { label: 'url',             value: '%URL%' },
    { label: 'markdown',        value: '[%TITLE%](%URL% "%TITLE%")' },
    { label: 'htmlblockquote',  value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>' },
    { label: 'bittly',          value: 'Get bittly URL', custom: function() { return util.httpGet('http://bit.ly/api?url=' + encodeURIComponent(buffer.URL)).responseText; }},
    { label: 'TitleAndbittly',  value: 'Get Title and bittly URL', custom: function() { return buffer.title + ' ' + util.httpGet('http://bit.ly/api?url=' + encodeURIComponent(buffer.URL)).responseText; }},
    { label: 'ASIN',            value: 'ASIN code from amazon', custom: function(){return content.document.getElementById('ASIN').value;} },
    { label: 'Amazon',          value: 'simple amazon url', custom: function(){return 'http://amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value;} },
    { label: 'AmazonAffiliate', value: 'simple amazon url with affiliate', custom: function(){return 'http://amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value + '/mt03-22';} },
    ];
EOM
" }}}

" direct_bookmark.js
let g:direct_sbm_use_services_by_tag = "h"
let g:direct_sbm_use_services_by_post = "h"
noremap <S-a>      :sbm<Space>[
noremap <Leader>be :bentry<CR>
noremap <Leader>bt :btags<CR>
noremap <Leader>bi :bicon<CR>

" feedsomekey_3.js {{{
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -u='mail\.google\.com/mail' c / j k n p o u e x s r a y # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' c / j,n k,p n,j p,k o u e x s r a y # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='www\.google\.(com|co\.jp)/reader' -events=vkeypress j k n p m s v A r S N P X O gh ga gs gt gu u / ? J K
lazy fmaps -u='(fastladder|livedoor)\.com/reader' j k s a p o v c i,p <Space> <S-Space> z b < > q w e,g
lazy fmaps -u='https?://www\.rememberthemilk\.com/home/' j k m i c ? F,f G,g S,s L,l Y,y H,h M,m 1 2 3 4 5 <Del> <C-S-Left> <C-S-Right>
lazy fmaps -u='http://code.google.com/p/vimperator-labs/issues/list' o j k
lazy fmaps -u='http://code.google.com/p/vimperator-labs/issues/detail' u
" }}}

" hints-for-embedded.js
let g:hints_for_embedded_mode="e"

" localkeymode.js {{{
let g:localkeymode_enable = "true"

javascript <<EOM
liberator.globalVariables.localKeyMappings= [
    [/www\.nicovideo\.jp\/watch/, [
        ['p', ':stplay'],
        ['m', ':stmute'],
        ['R', ':strepeat'],
        ['c', ':stcomment'],
        ['s', ':stseek! +10'],
        ['S', ':stseek! -10'],
    ]],
    [/youtube\.com\/watch/, [
        ['p', ':stplay'],
        ['m', ':stmute'],
        ['R', ':strepeat'],
        ['s', ':stseek! +10'],
        ['S', ':stseek! -10'],
    ]],
];
EOM
" }}}

" ldrize_cooperation.js
noremap <Leader>l :toggleldrizecooperation<CR>
let g:ldrc_intelligence_bind = "true"
let g:ldrc_skip = "0.25"

" plugin_loader.js {{{
let g:plugin_loader_roots = "./vimperator/bundle/vimperator-plugins/"

javascript <<EOF
liberator.globalVariables.plugin_loader_plugins = <>
appendAnchor
auto-focus-frame
bitly
caret-hint
commandBookmarklet
copy
direct_bookmark
feedSomeKeys_3
feeder
hatebuCounter
hint-tombloo
hints-for-embedded
ldrize_cooperation
ldrize_cooperation_fetch_flv
localkeymode
migemo-find
migemo_completion
migemo_hint
multi_requester
nextlink
open-frame
prevent-pseudo-domain.js
proxy
sbmcommentsviewer
stella
stylish
tombloo
twittperator
walk-input
yetmappings
</>.toString().split(/\s+/).filter(function(n) n);
EOF
" }}}

" proxy.js {{{
javascript <<EOM

liberator.globalVariables.proxy_settings = [
{
    conf_name: 'disable',
    conf_usage: 'direct connection',
    settings: [
        {
            label: 'type',
            param: 0
        }
    ]
},
{
    conf_name: 'proxomitron',
    conf_usage: 'use internal proxy',
    settings: [
        {
            label: 'type',
            param: 1
        },
        {
            label: 'http',
            param: 'localhost'
        },
        {
            label: 'http_port',
            param: 8080
        }
    ]
},
{
    conf_name: 'proxy.pac',
    conf_usage: 'proxy.pac',
    settings: [
        {
            label: 'type',
            param: 2
       },
       {
            label: 'autoconfig_url',
            param: 'http://192.168.9.19/proxy.pac'
       },
    ]
}
];
EOM
" }}}

" sbmcommentsviewer.js
noremap <leader>v :viewSBMComments<CR>

" toggle autopagerize
noremap <silent> <Leader>a :autopagerize<CR>

" multi_requester.js
noremap <leader>d  :mr goo<Space>

" tumblr
nnoremap <Leader>t :mb pinned-or-current-node\ |\ Tombloo::Reblog\ |\ clear-pin<CR>

" copy/paste {{{
javascript <<EOM
execute_silent = function(str, modifiers) {
    liberator.execute(str, modifiers, true);
}
if (liberator.has("Win32")) {
    execute_silent("cnoremap <C-a> <C-v><C-a>");
    execute_silent("cnoremap <C-z> <C-v><C-z>");
    execute_silent("cnoremap <C-x> <C-v><C-x>");
    execute_silent("cnoremap <C-c> <C-v><C-c>");
    execute_silent("cnoremap <C-v> <C-v><C-v>");
    execute_silent("inoremap <C-a> <C-v><C-a>");
    execute_silent("inoremap <C-z> <C-v><C-z>");
    execute_silent("inoremap <C-x> <C-v><C-x>");
    execute_silent("inoremap <C-c> <C-v><C-c>");
    execute_silent("inoremap <C-v> <C-v><C-v>");
}
else if (liberator.has("MacUnix")) {
    execute_silent("cnoremap <M-a> <C-v><M-a>");
    execute_silent("cnoremap <M-z> <C-v><M-z>");
    execute_silent("cnoremap <M-x> <C-v><M-x>");
    execute_silent("cnoremap <M-c> <C-v><M-c>");
    execute_silent("cnoremap <M-v> <C-v><M-v>");
    execute_silent("inoremap <M-a> <C-v><M-a>");
    execute_silent("inoremap <M-z> <C-v><M-z>");
    execute_silent("inoremap <M-x> <C-v><M-x>");
    execute_silent("inoremap <M-c> <C-v><M-c>");
    execute_silent("inoremap <M-v> <C-v><M-v>");
}
else {
}
EOM
" }}}

" Toggle Autopagerize {{{
javascript <<EOM
let (evaluateXPath = util.evaluateXPath || buffer.evaluateXPath) {
    commands.addUserCommand(
            ['autopagerize'],
            'Toggle AutoPagerize',
            function (args) {
            buffer.followLink(
                evaluateXPath('id("autopagerize_help")/div/a[@class="autopagerize_link"]').snapshotItem(0)
                );
            },
            {},
            true
            );
}
EOM
" }}}

echo "done."

" vim: ts=2 sw=2 sts=2 fdm=marker ft=vimperator

