[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1

  inoremap <expr><C-h> deoplete#smart_close_popup()."<C-h>"
  inoremap <expr><BS> deoplete#smart_close_popup()."<C-h>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = 'deoplete.nvim'
hook_add = '''
  " snippets dir
  let g:neosnippet#enable_snipmate_compatibility = 1

  if !exists("g:neosnippet#snippets_directory")
    let g:neosnippet#snippets_directory="."
  endif

  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  imap  <expr><Tab>
      \ pumvisible() ? "\<C-n>" :
      \ neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)" : "\<Tab>"

  smap <expr><Tab> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)" : "\<Tab>"

  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif

  set completeopt+=menuone
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = 'deoplete.nvim'

[[plugins]]
repo = 'ujihisa/neco-look'
depends = 'deoplete.nvim'
on_i = 1
hook_add = '''
  call dein#add('ujihisa/neco-look')
'''
