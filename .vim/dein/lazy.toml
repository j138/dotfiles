[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? '\<C-n>' :
  \ neosnippet#expandable_or_jumpable() ?
  \ '\<Plug>(neosnippet_expand_or_jump)' : '\<tab>'
'''

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_ft = ['snippet']
on_i = 1
hook_add = '''
  " snippets dir
  let g:neosnippet#enable_snipmate_compatibility = 1

  if !exists("g:neosnippet#snippets_directory")
    let g:neosnippet#snippets_directory="."
  endif

  " plugin key-mappings.
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)

  " SuperTab like snippets behavior.
  imap <expr><TAB> neosnippet#expandable() <Bar><bar> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable() <Bar><bar> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

  " For snippet_complete marker.
  if has('conceal')
    set conceallevel=2 concealcursor=i
  endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'ujihisa/neco-look'
depends = ['deoplete.nvim']
on_i = 1

[[plugins]]
repo = 'airblade/vim-rooter'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'vim-scripts/renamer.vim'
on_cmd = ['Rename']
